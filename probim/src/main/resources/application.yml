server:
  port: 8090
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/projectdocument?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
    username: root
    password: 666666
    # Redis数据库索引（默认为0）
  redis:
    database: 0
    # Redis服务器地址
    host: localhost
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: 666666
    # 连接池最大连接数（使用负值表示没有限制）
    jedis:
      pool:
        max-active: 20
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0
    # 连接超时时间（毫秒）
    timeout: 1000

##mybatis日志
#mybatis-plus:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# Mybatis配置
mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  # 我们这里使用注解的方式：这句话可以注释掉：
  # mapper-locations: classpath:/mapper/**/*Mapper.xml

  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.itheima.model
  #枚举扫描，多个package用逗号或者分号分隔
  type-enums-package: com.itheima.enums

  global-config:  #全局配置mybatis
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: id_worker
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: not_empty
      #逻辑删除配置（下面3个配置）
      #逻辑删除全局值
      logic-delete-value: 1
      #逻辑未删除全局值
      logic-not-delete-value: 0
      # sql-injector: com.baomidou.mybatisplus.extension.injector.LogicSqlInjector
      #自定义填充策略接口实现
      #meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    #当查询数据为空时字段返回为null，不加这个查询数据为空时，字段将被隐藏
    call-setters-on-nulls: true

# 跨域设置
cors:
  allowed-origins: /*
  allowed-headers: Content-Type,X-Adminid,X-Token
  allowed-methods: GET,POST,OPTIONS,PATCH

logging:
  level:
    com:
      neo:
        mapper: debug

aliyun:
  Folder: 中冶
  endPoint: oss-cn-hangzhou.aliyuncs.com
  accessKeyId: LTAI4FycauLxhMWczTj33kj9
  accessKeySecret: StII0NWkN5dR9jk37tHpOTylbayK82
  #bucket可以在控制台创建，也可以使用java代码创建
  bucketName: kongben


